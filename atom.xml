<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hdheid&#39;s blog</title>
  
  <subtitle>青春须早为，岂能长少年。</subtitle>
  <link href="https://hdheid.github.io/atom.xml" rel="self"/>
  
  <link href="https://hdheid.github.io/"/>
  <updated>2022-09-24T10:59:15.856Z</updated>
  <id>https://hdheid.github.io/</id>
  
  <author>
    <name>Hdheid</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2022-09-24队列队每日一题</title>
    <link href="https://hdheid.github.io/posts/e70936ab.html"/>
    <id>https://hdheid.github.io/posts/e70936ab.html</id>
    <published>2022-09-24T10:59:15.856Z</published>
    <updated>2022-09-24T10:59:15.856Z</updated>
    
    <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="力扣 1652. 拆炸弹" href="https://leetcode.cn/problems/defuse-the-bomb/"><div class="left"><img src="https://img.hipyt.cn/imgs/2022/09/e3f773cfe32f6f4f.jpg"/></div><div class="right"><p class="text">力扣 1652. 拆炸弹</p><p class="url">https://leetcode.cn/problems/defuse-the-bomb/</p></div></a></div><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>给出一个长度为 n 的数组 code 和一个值 k，对于 code 的每一个值 code[i] ，<strong>要求将其替换成 i 右边 k 个数值的和</strong>。</p><blockquote><ol><li>code[n-1] 的下一个元素是 code[0] ，即 code 数组是循环的</li><li>当 k 为零的时候，所有的值全部为零</li><li>当 k 为负数的时候，是用 i 的前面 k 个数值的和来替换</li></ol></blockquote><h2 id="题意解析"><a href="#题意解析" class="headerlink" title="题意解析"></a>题意解析</h2><p>唯一要注意的就是循环问题，我们可以将 code 后面在加上一个 code 数组命名为 cnt 数组。</p><blockquote><ol><li>当 k 大于零的时候，我们在前面一段进行处理</li><li>当 k 小于零的时候，我们在后面一段进行处理</li></ol></blockquote><p>这样就可以避免取模和数组越界问题。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">decrypt</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; code, <span class="type">int</span> k)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=code.<span class="built_in">size</span>();</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">cnt</span><span class="params">(n*<span class="number">2</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) cnt[i]=cnt[i+n]=code[i],code[i]=<span class="number">0</span>; </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(k)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(k&gt;<span class="number">0</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) </span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> j=i+<span class="number">1</span>;j&lt;=k+i;j++) code[i]+=cnt[j];  <span class="comment">//在前面一段进行处理</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> j=i+n<span class="number">-1</span>;j&gt;=i+n+k;j--) code[i]+=cnt[j];  <span class="comment">//在后面一段进行处理</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tag link&quot;&gt;&lt;a class=&quot;link-card&quot; title=&quot;力扣 1652. 拆炸弹&quot; href=&quot;https://leetcode.cn/problems/defuse-the-bomb/&quot;&gt;&lt;div class=&quot;left&quot;&gt;&lt;img </summary>
      
    
    
    
    <category term="每日一题--队列队" scheme="https://hdheid.github.io/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-%E9%98%9F%E5%88%97%E9%98%9F/"/>
    
    
    <category term="技巧题" scheme="https://hdheid.github.io/tags/%E6%8A%80%E5%B7%A7%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>2022-09-23队列队每日一题</title>
    <link href="https://hdheid.github.io/posts/82d008eb.html"/>
    <id>https://hdheid.github.io/posts/82d008eb.html</id>
    <published>2022-09-24T10:42:08.119Z</published>
    <updated>2022-09-24T10:42:08.119Z</updated>
    
    <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="力扣 707. 设计链表" href="https://leetcode.cn/problems/design-linked-list/"><div class="left"><img src="https://img.hipyt.cn/imgs/2022/09/e3f773cfe32f6f4f.jpg"/></div><div class="right"><p class="text">力扣 707. 设计链表</p><p class="url">https://leetcode.cn/problems/design-linked-list/</p></div></a></div><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>要求设计一个链表，实现<strong>按节点查找数值、在链表中插入数值、从头或者尾插入数值、删除某个节点</strong>。</p><h2 id="题意解析"><a href="#题意解析" class="headerlink" title="题意解析"></a>题意解析</h2><p>常规的数据结构题目，具体实现在代码中。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyLinkedList</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> size=<span class="number">0</span>;</span><br><span class="line">    ListNode *head;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">MyLinkedList</span>() </span><br><span class="line">    &#123;</span><br><span class="line">        size=<span class="number">0</span>;</span><br><span class="line">        head=<span class="keyword">new</span> <span class="built_in">ListNode</span>(); <span class="comment">//初始化头节点</span></span><br><span class="line">        head-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">get</span><span class="params">(<span class="type">int</span> index)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(index&lt;<span class="number">0</span>||index&gt;=size) <span class="keyword">return</span> <span class="number">-1</span>; <span class="comment">//当size等于0时，为第一个节点</span></span><br><span class="line">        ListNode *p=head;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=index;i++) p=p-&gt;next;</span><br><span class="line">        <span class="keyword">return</span> p-&gt;val;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">addAtHead</span><span class="params">(<span class="type">int</span> val)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        ListNode *p=<span class="keyword">new</span> <span class="built_in">ListNode</span>(val);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(head-&gt;next) p-&gt;next=head-&gt;next;</span><br><span class="line">        <span class="keyword">else</span> p-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">        head-&gt;next=p; <span class="comment">//头插法</span></span><br><span class="line">        size++;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ListNode *s=head-&gt;next;</span></span><br><span class="line">        <span class="comment">// while(s)</span></span><br><span class="line">        <span class="comment">// &#123;</span></span><br><span class="line">        <span class="comment">//     cout&lt;&lt;s-&gt;val&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">        <span class="comment">//     s=s-&gt;next;</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">addAtTail</span><span class="params">(<span class="type">int</span> val)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        ListNode *p=head;</span><br><span class="line">        <span class="comment">//尾插法</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;size;i++) p=p-&gt;next;</span><br><span class="line">        ListNode *q=<span class="keyword">new</span> <span class="built_in">ListNode</span>(val);</span><br><span class="line">        q-&gt;next=<span class="literal">NULL</span>; </span><br><span class="line">        p-&gt;next=q;</span><br><span class="line">        size++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">addAtIndex</span><span class="params">(<span class="type">int</span> index, <span class="type">int</span> val)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//插入操作</span></span><br><span class="line">        <span class="keyword">if</span>(index&gt;size) <span class="keyword">return</span> ;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(index&lt;<span class="number">0</span>) <span class="built_in">addAtHead</span>(val);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            ListNode *p=head;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;index;i++) p=p-&gt;next; </span><br><span class="line">            ListNode *q=<span class="keyword">new</span> <span class="built_in">ListNode</span>(val);</span><br><span class="line">            q-&gt;next=p-&gt;next;</span><br><span class="line">            p-&gt;next=q;</span><br><span class="line">            size++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">deleteAtIndex</span><span class="params">(<span class="type">int</span> index)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//删除操作</span></span><br><span class="line">        <span class="keyword">if</span>(index&lt;<span class="number">0</span>||index&gt;=size) <span class="keyword">return</span> ;</span><br><span class="line">        ListNode *p=head;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;index;i++) p=p-&gt;next;</span><br><span class="line">        ListNode *q=p-&gt;next;</span><br><span class="line">        p-&gt;next=p-&gt;next-&gt;next; </span><br><span class="line">        <span class="built_in">delete</span>(q);</span><br><span class="line">        size--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Your MyLinkedList object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * MyLinkedList* obj = new MyLinkedList();</span></span><br><span class="line"><span class="comment"> * int param_1 = obj-&gt;get(index);</span></span><br><span class="line"><span class="comment"> * obj-&gt;addAtHead(val);</span></span><br><span class="line"><span class="comment"> * obj-&gt;addAtTail(val);</span></span><br><span class="line"><span class="comment"> * obj-&gt;addAtIndex(index,val);</span></span><br><span class="line"><span class="comment"> * obj-&gt;deleteAtIndex(index);</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tag link&quot;&gt;&lt;a class=&quot;link-card&quot; title=&quot;力扣 707. 设计链表&quot; href=&quot;https://leetcode.cn/problems/design-linked-list/&quot;&gt;&lt;div class=&quot;left&quot;&gt;&lt;i</summary>
      
    
    
    
    <category term="每日一题--队列队" scheme="https://hdheid.github.io/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-%E9%98%9F%E5%88%97%E9%98%9F/"/>
    
    
    <category term="链表" scheme="https://hdheid.github.io/tags/%E9%93%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>2022-09-22队列队每日一题</title>
    <link href="https://hdheid.github.io/posts/95f86c2b.html"/>
    <id>https://hdheid.github.io/posts/95f86c2b.html</id>
    <published>2022-09-24T10:36:04.319Z</published>
    <updated>2022-09-24T10:36:04.319Z</updated>
    
    <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="力扣 2414. 最长的字母序连续子字符串的长度" href="https://leetcode.cn/problems/length-of-the-longest-alphabetical-continuous-substring/"><div class="left"><img src="https://img.hipyt.cn/imgs/2022/09/e3f773cfe32f6f4f.jpg"/></div><div class="right"><p class="text">力扣 2414. 最长的字母序连续子字符串的长度</p><p class="url">https://leetcode.cn/problems/length-of-the-longest-alphabetical-continuous-substring/</p></div></a></div><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>给出一个字符串，求出最长的连续子数组。<strong>连续数组指的是类似于 “abcd” 这样前后字母在字母表中连续的字符串</strong>。</p><h2 id="题意解析"><a href="#题意解析" class="headerlink" title="题意解析"></a>题意解析</h2><p>i遍历每一个字母，j 从 i 开始往右走，直到不连续位置，定义一个ans 记录最大长度。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">longestContinuousSubstring</span><span class="params">(string s)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>();)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> j=i+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(j&lt;s.<span class="built_in">size</span>()&amp;&amp;(s[j]-s[j<span class="number">-1</span>]==<span class="number">1</span>)) j++;  <span class="comment">//双指针</span></span><br><span class="line">            ans=<span class="built_in">max</span>(ans,j-i);</span><br><span class="line">            i=j;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tag link&quot;&gt;&lt;a class=&quot;link-card&quot; title=&quot;力扣 2414. 最长的字母序连续子字符串的长度&quot; href=&quot;https://leetcode.cn/problems/length-of-the-longest-alphabe</summary>
      
    
    
    
    <category term="每日一题--队列队" scheme="https://hdheid.github.io/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-%E9%98%9F%E5%88%97%E9%98%9F/"/>
    
    
    <category term="双指针" scheme="https://hdheid.github.io/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>2022-09-21队列队每日一题</title>
    <link href="https://hdheid.github.io/posts/ac80c16b.html"/>
    <id>https://hdheid.github.io/posts/ac80c16b.html</id>
    <published>2022-09-24T10:29:43.801Z</published>
    <updated>2022-09-24T10:29:43.801Z</updated>
    
    <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="力扣 648. 单词替换" href="https://leetcode.cn/problems/replace-words/"><div class="left"><img src="https://img.hipyt.cn/imgs/2022/09/e3f773cfe32f6f4f.jpg"/></div><div class="right"><p class="text">力扣 648. 单词替换</p><p class="url">https://leetcode.cn/problems/replace-words/</p></div></a></div><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>给出一个词根数组，再给出一句话，要求将这句话里面的单词全部换成对应的词根，要求尽量是最短的词根。</p><h2 id="题意解析"><a href="#题意解析" class="headerlink" title="题意解析"></a>题意解析</h2><p>如题目所示，换句话说就是<span class='p red'>将一句话里面所有单词全部更换为其对应前缀数组里面出现的前缀，词根数组也就是前缀数组</span>。 我们要做的就是通过词根数组构造字典树(前缀树)，然后再检索每一个单词，寻找最短的前缀。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">4e4</span>+<span class="number">9e3</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> son[N][<span class="number">26</span>],cnt[N],idx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span> <span class="comment">//初始化</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        idx=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span>(son,<span class="number">0</span>,<span class="keyword">sizeof</span> son);</span><br><span class="line">        <span class="built_in">memset</span>(cnt,<span class="number">0</span>,<span class="keyword">sizeof</span> cnt);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(string s)</span> <span class="comment">//将字符串插入字典树</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> p=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> u=s[i]-<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span>(!son[p][u]) son[p][u]=++idx;</span><br><span class="line">            p=son[p][u];</span><br><span class="line">            <span class="keyword">if</span>(cnt[p]) <span class="keyword">break</span>;  <span class="comment">//如果存在比这个词跟更短的词根，就没有必要继续了</span></span><br><span class="line">        &#125;</span><br><span class="line">        cnt[p]=<span class="number">1</span>; <span class="comment">//标记单词末尾字符</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">change</span><span class="params">(string &amp;s)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> p=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> u=s[i]-<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            p=son[p][u];</span><br><span class="line">            <span class="keyword">if</span>(!p) <span class="keyword">return</span> ;</span><br><span class="line">            <span class="keyword">if</span>(cnt[p]) &#123; s=s.<span class="built_in">substr</span>(<span class="number">0</span>,i+<span class="number">1</span>); <span class="keyword">return</span> ; &#125;  <span class="comment">//取前缀</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">string <span class="title">replaceWords</span><span class="params">(vector&lt;string&gt;&amp; dictionary, string s)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">init</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> str : dictionary) <span class="built_in">insert</span>(str);</span><br><span class="line"></span><br><span class="line">        string ans;</span><br><span class="line">        <span class="function">istringstream <span class="title">str</span><span class="params">(s)</span></span>;</span><br><span class="line">        string ss;</span><br><span class="line">        <span class="keyword">while</span>(str &gt;&gt; ss) <span class="built_in">change</span>(ss),ans+=ss+<span class="string">&#x27; &#x27;</span>;  <span class="comment">//将一句话中的单词一个一个提取出来        </span></span><br><span class="line">        ans.<span class="built_in">pop_back</span>();  <span class="comment">//去掉最后面的一个空格</span></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tag link&quot;&gt;&lt;a class=&quot;link-card&quot; title=&quot;力扣 648. 单词替换&quot; href=&quot;https://leetcode.cn/problems/replace-words/&quot;&gt;&lt;div class=&quot;left&quot;&gt;&lt;img sr</summary>
      
    
    
    
    <category term="每日一题--队列队" scheme="https://hdheid.github.io/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-%E9%98%9F%E5%88%97%E9%98%9F/"/>
    
    
    <category term="字典树" scheme="https://hdheid.github.io/tags/%E5%AD%97%E5%85%B8%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>2022-09-20队列队每日一题</title>
    <link href="https://hdheid.github.io/posts/bba8a5ab.html"/>
    <id>https://hdheid.github.io/posts/bba8a5ab.html</id>
    <published>2022-09-24T10:19:59.452Z</published>
    <updated>2022-09-24T10:19:59.452Z</updated>
    
    <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="力扣 208. 实现 Trie (前缀树)" href="https://leetcode.cn/problems/implement-trie-prefix-tree/"><div class="left"><img src="https://img.hipyt.cn/imgs/2022/09/e3f773cfe32f6f4f.jpg"/></div><div class="right"><p class="text">力扣 208. 实现 Trie (前缀树)</p><p class="url">https://leetcode.cn/problems/implement-trie-prefix-tree/</p></div></a></div><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>题目要求构造一个字典树，实现字典树的初始化、字符串的插入、字符串的检索、查找树里面是否有相应的前缀。</p><h2 id="题意解析"><a href="#题意解析" class="headerlink" title="题意解析"></a>题意解析</h2><p>该题目意在狗找一个字典树，实现基本功能，这里也是使用数组模拟字典树。我们在插入完一个字符串之后，对其最后一个字符进行标记，那么<strong>检索的字符串的时候，如果最后面一个单词在字典树中已经进行了标记，那么就证明检索成功。同理，如果我们查找前缀的时候发现相应的字符并没有对应的节点(还没有开它的节点 )，那么字典树中就没有这个前缀。</strong></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">3e4</span>+<span class="number">1e3</span>+<span class="number">10</span>;  <span class="comment">//数组模拟字典树</span></span><br><span class="line"><span class="type">int</span> son[N][<span class="number">26</span>],cnt[N],idx;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Trie</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Trie</span>()  <span class="comment">//初始化</span></span><br><span class="line">    &#123;</span><br><span class="line">        idx=<span class="number">0</span>;   </span><br><span class="line">        <span class="built_in">memset</span>(cnt,<span class="number">0</span>,<span class="keyword">sizeof</span> cnt);</span><br><span class="line">        <span class="built_in">memset</span>(son,<span class="number">0</span>,<span class="keyword">sizeof</span> son);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(string word)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> p=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;word.<span class="built_in">size</span>();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> u=word[i]-<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!son[p][u]) son[p][u]=++idx;</span><br><span class="line">            p=son[p][u];</span><br><span class="line">        &#125;</span><br><span class="line">        cnt[p]=<span class="number">1</span>;  <span class="comment">//对其末尾字符进行标记</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">search</span><span class="params">(string word)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> p=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;word.<span class="built_in">size</span>();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> u=word[i]-<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span>(!son[p][u])  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            p=son[p][u];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cnt[p]; <span class="comment">//如果查找的字符的末尾单词在字典树中有标记，那么其已存在于字典树</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">startsWith</span><span class="params">(string prefix)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> p=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;prefix.<span class="built_in">size</span>();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> u=prefix[i]-<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span>(!son[p][u]) <span class="keyword">return</span> <span class="literal">false</span>;   <span class="comment">//如果对应的字符未开节点，那么就没有对应的前缀</span></span><br><span class="line">            p=son[p][u];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Your Trie object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * Trie* obj = new Trie();</span></span><br><span class="line"><span class="comment"> * obj-&gt;insert(word);</span></span><br><span class="line"><span class="comment"> * bool param_2 = obj-&gt;search(word);</span></span><br><span class="line"><span class="comment"> * bool param_3 = obj-&gt;startsWith(prefix);</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tag link&quot;&gt;&lt;a class=&quot;link-card&quot; title=&quot;力扣 208. 实现 Trie (前缀树)&quot; href=&quot;https://leetcode.cn/problems/implement-trie-prefix-tree/&quot;&gt;&lt;di</summary>
      
    
    
    
    <category term="每日一题--队列队" scheme="https://hdheid.github.io/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-%E9%98%9F%E5%88%97%E9%98%9F/"/>
    
    
    <category term="字典树" scheme="https://hdheid.github.io/tags/%E5%AD%97%E5%85%B8%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>2022-09-19队列队每日一题</title>
    <link href="https://hdheid.github.io/posts/6326de56.html"/>
    <id>https://hdheid.github.io/posts/6326de56.html</id>
    <published>2022-09-24T10:10:59.093Z</published>
    <updated>2022-09-24T10:10:59.093Z</updated>
    
    <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="力扣 2416. 字符串的前缀分数和" href="https://leetcode.cn/problems/sum-of-prefix-scores-of-strings/"><div class="left"><img src="https://img.hipyt.cn/imgs/2022/09/e3f773cfe32f6f4f.jpg"/></div><div class="right"><p class="text">力扣 2416. 字符串的前缀分数和</p><p class="url">https://leetcode.cn/problems/sum-of-prefix-scores-of-strings/</p></div></a></div><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>题目给出一个长度为 n 的数组 words，该数组由非空字符串组成。<br>对于每一个 word，他的分数为<span class='p red'>他的所有前缀在 words 数组中为其他字符串的前缀的个数</span>。</p><p><br></p><h2 id="题意解析"><a href="#题意解析" class="headerlink" title="题意解析"></a>题意解析</h2><p>典型的字典树题目。如图所示：<br><div class="img-wrap"><div class="img-bg"><img class="img" src="https://img.hipyt.cn/imgs/2022/09/79027c913cab2dcc.jpg"/></div></div></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">4e5</span>+<span class="number">10</span>; <span class="comment">//数组模拟字典树</span></span><br><span class="line"><span class="type">int</span> son[N][<span class="number">26</span>],cnt[N],idx=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(string str)</span> <span class="comment">//往字典树中加入字符串，构造字典树</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> p=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;str.<span class="built_in">size</span>();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> u=str[i]-<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span>(!son[p][u]) son[p][u]=++idx;</span><br><span class="line">            p=son[p][u];</span><br><span class="line">            cnt[p]++;  <span class="comment">//节点值加一</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;        </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">query</span><span class="params">(string str,vector&lt;<span class="type">int</span>&gt; &amp;ans)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> p=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;str.<span class="built_in">size</span>();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> u=str[i]-<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            p=son[p][u];</span><br><span class="line">            res+=cnt[p];  <span class="comment">//查找节点值，亦即分数</span></span><br><span class="line">        &#125;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">sumPrefixScores</span><span class="params">(vector&lt;string&gt;&amp; w)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        idx=<span class="number">0</span>;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">        <span class="built_in">memset</span>(son,<span class="number">0</span>,<span class="keyword">sizeof</span> son); <span class="comment">//初始化</span></span><br><span class="line">        <span class="built_in">memset</span>(cnt,<span class="number">0</span>,<span class="keyword">sizeof</span> cnt);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> s : w) <span class="built_in">insert</span>(s);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> s : w) <span class="built_in">query</span>(s,ans);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tag link&quot;&gt;&lt;a class=&quot;link-card&quot; title=&quot;力扣 2416. 字符串的前缀分数和&quot; href=&quot;https://leetcode.cn/problems/sum-of-prefix-scores-of-strings/&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="每日一题--队列队" scheme="https://hdheid.github.io/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-%E9%98%9F%E5%88%97%E9%98%9F/"/>
    
    
    <category term="字典树" scheme="https://hdheid.github.io/tags/%E5%AD%97%E5%85%B8%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>2022-09-18队列队每日一题</title>
    <link href="https://hdheid.github.io/posts/740eba96.html"/>
    <id>https://hdheid.github.io/posts/740eba96.html</id>
    <published>2022-09-21T14:19:04.848Z</published>
    <updated>2022-09-21T15:51:16.254Z</updated>
    
    <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="力扣 2411. 按位或最大的最小子数组长度" href="https://leetcode.cn/problems/smallest-subarrays-with-maximum-bitwise-or/"><div class="left"><img src="https://img.hipyt.cn/imgs/2022/09/e3f773cfe32f6f4f.jpg"/></div><div class="right"><p class="text">力扣 2411. 按位或最大的最小子数组长度</p><p class="url">https://leetcode.cn/problems/smallest-subarrays-with-maximum-bitwise-or/</p></div></a></div><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>给出一个长度为 n 的数组 num ，所有的数都大于零，对于数组的每一个下标 i ( 0 &lt;= i &lt;= n-1 )，以 i 为起点向左找到最短的具有最大或运算值的子数组。最大或运算值的数组<strong>指的是将数组所有的数或运算得到的值</strong>。</p><h2 id="题意解析"><a href="#题意解析" class="headerlink" title="题意解析"></a>题意解析</h2><p>对于某一个下标 i，值为 num[i] ，我们可以知道如果果让一个数 x 与其按位或运算，想让值变大的话，<span class='p res'>那么在二进制上，num[i] 为 0 的位置 x 必须为 1</span>。<br>因此，我们可以倒序遍历 num 数组，并且用一个辅助数组 cnt 来记录二进制上某一位为 1 的数在 num 上的位置。然后，当我们需要计算 num[i] 的最短最大或运算的子数组的时候，我们已经记录了 num[i] 左边二进制某一位为一的数的位置，我们只需要<strong>找到所有在 num[i] 的二进制位为 0 的位置，但是某个是 1 在 cnt 的记录的位置取最大值即可</strong>，由于是从右往左覆盖记录的位置，所以 cnt 里面的值一定是最小的。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">smallestSubarrays</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; n)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">cnt</span><span class="params">(<span class="number">32</span>, <span class="number">-1</span>)</span></span>;<span class="comment">//看在哪一个位置的数的某一位为1</span></span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">ans</span><span class="params">(n.size())</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=n.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> m=i;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">32</span>;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(n[i]&gt;&gt;j&amp;<span class="number">1</span>) cnt[j]=i; <span class="comment">//因为从后往前，那么i必然越来越小，只要这个数的第j位为1，就直接记录下来</span></span><br><span class="line">                <span class="keyword">if</span>(cnt[j]!=<span class="number">-1</span>) m=<span class="built_in">max</span>(m,cnt[j]); <span class="comment">//找到能够保证每一位为1的最小位置（没有就算了）</span></span><br><span class="line">            &#125;</span><br><span class="line">            ans[i]=m-i+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tag link&quot;&gt;&lt;a class=&quot;link-card&quot; title=&quot;力扣 2411. 按位或最大的最小子数组长度&quot; href=&quot;https://leetcode.cn/problems/smallest-subarrays-with-maximum</summary>
      
    
    
    
    <category term="每日一题--队列队" scheme="https://hdheid.github.io/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-%E9%98%9F%E5%88%97%E9%98%9F/"/>
    
    
    <category term="位运算" scheme="https://hdheid.github.io/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>2022-09-16队列队每日一题</title>
    <link href="https://hdheid.github.io/posts/bfbcc616.html"/>
    <id>https://hdheid.github.io/posts/bfbcc616.html</id>
    <published>2022-09-16T12:19:57.281Z</published>
    <updated>2022-09-16T12:20:43.075Z</updated>
    
    <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="力扣 1114. 棋盘问题" href="https://www.acwing.com/problem/content/description/1116/"><div class="left"><img src="https://img.hipyt.cn/imgs/2022/09/e3f773cfe32f6f4f.jpg"/></div><div class="right"><p class="text">力扣 1114. 棋盘问题</p><p class="url">https://www.acwing.com/problem/content/description/1116/</p></div></a></div><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>给出一个棋盘，棋盘上为 <strong>‘#’</strong> 的位置才能放棋子，并且<strong>每一行每一列</strong>只能放一个旗子，有多组数据，当输入为 -1-1 的时候结束。</p><h2 id="题意解析"><a href="#题意解析" class="headerlink" title="题意解析"></a>题意解析</h2><p>这个题目与昨天的 n 皇后问题类似，区别在与它只放 k 个棋子，k 可能小于 n，并且只有特定区域才能放棋子。还是使用 DFS 的方法来做。</p><blockquote><p>一行一行的枚举，找到能放棋子的位置，cnt 计数，当放满 k 个棋子后，答案加一<br>这个题目有点需要注意的是：<strong>如果有一行没有放棋子那么还可以在下一行来放，这个需要手动添加</strong>。</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">10</span>;</span><br><span class="line"><span class="type">char</span> g[N][N];</span><br><span class="line"><span class="type">bool</span> col[N];</span><br><span class="line"><span class="type">int</span> n,k;</span><br><span class="line"><span class="type">int</span> ans,cnt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(cnt==k) <span class="comment">//放完了就代表多了一种方法</span></span><br><span class="line">    &#123;</span><br><span class="line">        ans++;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(u&gt;=n) <span class="keyword">return</span> ; <span class="comment">//如果遍历完了还没有放完，就代表着这一种方法不行</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="comment">//遍历第 u 的每一列</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(g[u][i]==<span class="string">&#x27;#&#x27;</span>&amp;&amp;!col[i])</span><br><span class="line">        &#123; <span class="comment">//如果这一行能够放棋子</span></span><br><span class="line">            cnt++;</span><br><span class="line">            col[i]=<span class="number">1</span>;</span><br><span class="line">            <span class="built_in">dfs</span>(u+<span class="number">1</span>); <span class="comment">//那么进入下一行</span></span><br><span class="line">            cnt--; <span class="comment">//恢复现场</span></span><br><span class="line">            col[i]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">dfs</span>(u+<span class="number">1</span>); <span class="comment">//如果这一行不放棋子，那么直接进入下一行</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;k&amp;&amp;n!=<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ans=<span class="number">0</span>,cnt=<span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                cin&gt;&gt;g[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">dfs</span>(<span class="number">0</span>);</span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tag link&quot;&gt;&lt;a class=&quot;link-card&quot; title=&quot;力扣 1114. 棋盘问题&quot; href=&quot;https://www.acwing.com/problem/content/description/1116/&quot;&gt;&lt;div class=</summary>
      
    
    
    
    <category term="每日一题--队列队" scheme="https://hdheid.github.io/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-%E9%98%9F%E5%88%97%E9%98%9F/"/>
    
    
    <category term="DFS" scheme="https://hdheid.github.io/tags/DFS/"/>
    
  </entry>
  
  <entry>
    <title>2022-09-15队列队每日一题</title>
    <link href="https://hdheid.github.io/posts/86c46b56.html"/>
    <id>https://hdheid.github.io/posts/86c46b56.html</id>
    <published>2022-09-15T10:05:52.467Z</published>
    <updated>2022-09-15T10:18:38.904Z</updated>
    
    <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="力扣 51. N 皇后" href="https://leetcode.cn/problems/n-queens/"><div class="left"><img src="https://img.hipyt.cn/imgs/2022/09/e3f773cfe32f6f4f.jpg"/></div><div class="right"><p class="text">力扣 51. N 皇后</p><p class="url">https://leetcode.cn/problems/n-queens/</p></div></a></div><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>给出一个数 n，在一个 n x n 的矩阵中，摆上 n 个皇后，要求<strong>同一行、同一列、同一个斜线(左右)上只能存在一个皇后，皇后所在地用 ‘Q’ 表示，其他位置用 ‘.’ 表示</strong>，求出所有不同的摆放情况。</p><h2 id="题意解析"><a href="#题意解析" class="headerlink" title="题意解析"></a>题意解析</h2><p>如果采用 DFS 的想法，我们一行一行的枚举，<span class='p red'>对行进行深搜</span>。当我们判断到对 u 行的第 i 列是否能够放皇后的时候，如果能，继续判断第 u+1 行，如此循环。</p><p><br></p><p>因此，我们只需要判断在 <strong>[ u , i ]</strong> 这个点上能不能放皇后，不能就看下一列，能就直接跳到下一行。我们使用 col、dg、udg 三个数组来判断某个位置能不能放放后。</p><p><br></p><p>对于每一列，我们直接看 <strong>col[i]</strong> 是否为 false 即可。<br>我们如何使用 dg、udg 来判断对角线上是否有皇后呢？<br><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.hualigs.cn/image/6322f6ca87a7e.jpg"/></div></div></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> col[N],dg[N&lt;&lt;<span class="number">1</span>],udg[N&lt;&lt;<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> n,vector&lt;string&gt; &amp;res,vector&lt;vector&lt;string&gt;&gt; &amp;ans)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(u==n) <span class="comment">//如果成功放完</span></span><br><span class="line">        &#123;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(res);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//对于每一列，判断这一列是否能够放一个皇后</span></span><br><span class="line">            <span class="keyword">if</span>(!col[i]&amp;&amp;!dg[i+u]&amp;&amp;!udg[n-u+i])</span><br><span class="line">            &#123;</span><br><span class="line">                res[u][i]=<span class="string">&#x27;Q&#x27;</span>;</span><br><span class="line">                col[i]=dg[i+u]=udg[n-u+i]=<span class="literal">true</span>;</span><br><span class="line">                <span class="built_in">dfs</span>(u+<span class="number">1</span>,n,res,ans);</span><br><span class="line">                col[i]=dg[i+u]=udg[n-u+i]=<span class="literal">false</span>;</span><br><span class="line">                res[u][i]=<span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    vector&lt;vector&lt;string&gt;&gt; <span class="built_in">solveNQueens</span>(<span class="type">int</span> n) </span><br><span class="line">    &#123;</span><br><span class="line">        vector&lt;string&gt; res;</span><br><span class="line">        vector&lt;vector&lt;string&gt;&gt; ans;</span><br><span class="line"></span><br><span class="line">        string s;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) s+=<span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) res.<span class="built_in">push_back</span>(s);</span><br><span class="line">        <span class="comment">//初始化</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">dfs</span>(<span class="number">0</span>,n,res,ans);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tag link&quot;&gt;&lt;a class=&quot;link-card&quot; title=&quot;力扣 51. N 皇后&quot; href=&quot;https://leetcode.cn/problems/n-queens/&quot;&gt;&lt;div class=&quot;left&quot;&gt;&lt;img src=&quot;htt</summary>
      
    
    
    
    <category term="每日一题--队列队" scheme="https://hdheid.github.io/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-%E9%98%9F%E5%88%97%E9%98%9F/"/>
    
    
    <category term="DFS" scheme="https://hdheid.github.io/tags/DFS/"/>
    
  </entry>
  
  <entry>
    <title>2022-09-14队列队每日一题</title>
    <link href="https://hdheid.github.io/posts/91ec0f96.html"/>
    <id>https://hdheid.github.io/posts/91ec0f96.html</id>
    <published>2022-09-14T13:12:45.227Z</published>
    <updated>2022-09-14T13:14:10.054Z</updated>
    
    <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="力扣 1619. 删除某些元素后的数组均值" href="https://leetcode.cn/problems/mean-of-array-after-removing-some-elements/submissions/"><div class="left"><img src="https://img.hipyt.cn/imgs/2022/09/e3f773cfe32f6f4f.jpg"/></div><div class="right"><p class="text">力扣 1619. 删除某些元素后的数组均值</p><p class="url">https://leetcode.cn/problems/mean-of-array-after-removing-some-elements/submissions/</p></div></a></div><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>把一个数组的前 %5 个数和后 %5 个数去掉，剩下的数求平均值。</p><h2 id="题意解析"><a href="#题意解析" class="headerlink" title="题意解析"></a>题意解析</h2><p>太简单略。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">double</span> <span class="title">trimMean</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; arr)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">sort</span>(arr.<span class="built_in">begin</span>(),arr.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=arr.<span class="built_in">size</span>()*<span class="number">0.05</span>;i&lt;arr.<span class="built_in">size</span>()*<span class="number">0.95</span>;i++)</span><br><span class="line">        &#123; <span class="comment">//掐头去尾</span></span><br><span class="line">            cnt+=arr[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (<span class="type">double</span>)cnt/(arr.<span class="built_in">size</span>()*<span class="number">0.9</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tag link&quot;&gt;&lt;a class=&quot;link-card&quot; title=&quot;力扣 1619. 删除某些元素后的数组均值&quot; href=&quot;https://leetcode.cn/problems/mean-of-array-after-removing-som</summary>
      
    
    
    
    <category term="每日一题--队列队" scheme="https://hdheid.github.io/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-%E9%98%9F%E5%88%97%E9%98%9F/"/>
    
    
    <category term="模拟" scheme="https://hdheid.github.io/tags/%E6%A8%A1%E6%8B%9F/"/>
    
  </entry>
  
  <entry>
    <title>2022-09-13队列队每日一题</title>
    <link href="https://hdheid.github.io/posts/f43531d6.html"/>
    <id>https://hdheid.github.io/posts/f43531d6.html</id>
    <published>2022-09-13T10:56:20.807Z</published>
    <updated>2022-09-13T10:57:19.689Z</updated>
    
    <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="力扣 670. 最大交换" href="https://leetcode.cn/problems/maximum-swap/"><div class="left"><img src="https://img.hipyt.cn/imgs/2022/09/e3f773cfe32f6f4f.jpg"/></div><div class="right"><p class="text">力扣 670. 最大交换</p><p class="url">https://leetcode.cn/problems/maximum-swap/</p></div></a></div><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>给定一个非负整数，你至多可以交换一次数字中的<strong>任意两位</strong>。返回你能得到的<span class='p red'>最大值</span>。</p><h2 id="题意解析"><a href="#题意解析" class="headerlink" title="题意解析"></a>题意解析</h2><p>将数字拆分下来存放在数组 v 中，遍历交换任意两个数字，再将其变回数字，用 ans 来记录最大的数字。</p><h2 id="代码-暴力"><a href="#代码-暴力" class="headerlink" title="代码(暴力)"></a>代码(暴力)</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">to_number</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;v)</span></span></span><br><span class="line"><span class="function">    </span>&#123; <span class="comment">//将数组变回数字</span></span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0</span>,cnt=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> x : v) ans+=x*cnt,cnt*=<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">maximumSwap</span><span class="params">(<span class="type">int</span> num)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line">        <span class="type">int</span> ans=num;</span><br><span class="line">        <span class="keyword">while</span>(num)</span><br><span class="line">        &#123;</span><br><span class="line">            v.<span class="built_in">push_back</span>(num%<span class="number">10</span>);</span><br><span class="line">            num/=<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;v.<span class="built_in">size</span>();i++)</span><br><span class="line">        &#123; <span class="comment">//遍历</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;v.<span class="built_in">size</span>();j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(i==j) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="built_in">swap</span>(v[i],v[j]);</span><br><span class="line">                ans=<span class="built_in">max</span>(ans,<span class="built_in">to_number</span>(v));</span><br><span class="line">                <span class="built_in">swap</span>(v[i],v[j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//暴力yyds</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tag link&quot;&gt;&lt;a class=&quot;link-card&quot; title=&quot;力扣 670. 最大交换&quot; href=&quot;https://leetcode.cn/problems/maximum-swap/&quot;&gt;&lt;div class=&quot;left&quot;&gt;&lt;img src</summary>
      
    
    
    
    <category term="每日一题--队列队" scheme="https://hdheid.github.io/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-%E9%98%9F%E5%88%97%E9%98%9F/"/>
    
    
    <category term="暴力" scheme="https://hdheid.github.io/tags/%E6%9A%B4%E5%8A%9B/"/>
    
  </entry>
  
  <entry>
    <title>2022-09-12未来可期小组每日一题</title>
    <link href="https://hdheid.github.io/posts/6ee60c0f.html"/>
    <id>https://hdheid.github.io/posts/6ee60c0f.html</id>
    <published>2022-09-13T10:32:38.178Z</published>
    <updated>2022-09-13T10:57:19.685Z</updated>
    
    <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="acwing 1762. 牛的洗牌" href="https://www.acwing.com/problem/content/description/1764/"><div class="left"><img src="https://img.hipyt.cn/imgs/2022/09/e3f773cfe32f6f4f.jpg"/></div><div class="right"><p class="text">acwing 1762. 牛的洗牌</p><p class="url">https://www.acwing.com/problem/content/description/1764/</p></div></a></div><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>略<br><br><br><br></p><h2 id="题意解析"><a href="#题意解析" class="headerlink" title="题意解析"></a>题意解析</h2><p>由于给出的顺序是牛被洗牌三次的顺序，我们给出三个数组 a[N] , b[N] , c[N]，b 数组装 id，a 数组记录逆洗牌的顺序，我们需要进行三次逆洗牌，那么每一次洗牌，i 未知的牛都回去 a[i] 的位置。所以三次逆洗牌之后，会回到 a[a[a[i]]] 的 位置。</p><h2 id="代码-c"><a href="#代码-c" class="headerlink" title="代码(c++)"></a>代码(c++)</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">110</span>;</span><br><span class="line"><span class="type">int</span> a[N],b[N],c[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x,n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        a[x]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;b[i];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        c[a[a[a[i]]]]=b[i];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cout&lt;&lt;c[i]&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tag link&quot;&gt;&lt;a class=&quot;link-card&quot; title=&quot;acwing 1762. 牛的洗牌&quot; href=&quot;https://www.acwing.com/problem/content/description/1764/&quot;&gt;&lt;div cl</summary>
      
    
    
    
    <category term="每日一题--未来可期小组" scheme="https://hdheid.github.io/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F%E5%B0%8F%E7%BB%84/"/>
    
    
    <category term="技巧题" scheme="https://hdheid.github.io/tags/%E6%8A%80%E5%B7%A7%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>2022-09-11未来可期小组每日一题</title>
    <link href="https://hdheid.github.io/posts/7dce357c.html"/>
    <id>https://hdheid.github.io/posts/7dce357c.html</id>
    <published>2022-09-13T10:32:31.858Z</published>
    <updated>2022-09-13T10:57:19.676Z</updated>
    
    <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="acwing 1761. 阻挡广告牌" href="https://www.acwing.com/problem/content/1763/"><div class="left"><img src="https://img.hipyt.cn/imgs/2022/09/e3f773cfe32f6f4f.jpg"/></div><div class="right"><p class="text">acwing 1761. 阻挡广告牌</p><p class="url">https://www.acwing.com/problem/content/1763/</p></div></a></div><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>有两个矩形广告牌和一辆矩形货车，用坐标表示在二维坐标系中，每个矩形给出左下角和右上角的坐标，两个广告牌有 可能会被矩形货车盖住一部分，求出没有被盖住的广告牌的面积。</p><h2 id="题意解析"><a href="#题意解析" class="headerlink" title="题意解析"></a>题意解析</h2><p>创建一个二维矩阵，对于两个广告牌，我们使其区域中每个数都为 1，让矩形货车范围内的数都变成零，其他数都为零，计算有多少个 1 即可。</p><h2 id="代码-c"><a href="#代码-c" class="headerlink" title="代码(c++)"></a>代码(c++)</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1001</span>;</span><br><span class="line"><span class="type">int</span> a,b,c,d;<span class="comment">//第一个广告牌</span></span><br><span class="line"><span class="type">int</span> e,f,g,h;<span class="comment">//第二个广告牌</span></span><br><span class="line"><span class="type">int</span> i,j,k,l;<span class="comment">//第三个大货车</span></span><br><span class="line"><span class="type">int</span> z[N*<span class="number">2</span>][N*<span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d;</span><br><span class="line">    cin&gt;&gt;e&gt;&gt;f&gt;&gt;g&gt;&gt;h;</span><br><span class="line">    cin&gt;&gt;i&gt;&gt;j&gt;&gt;k&gt;&gt;l;</span><br><span class="line">    a+=N,b+=N,c+=N,d+=N,e+=N,f+=N,g+=N,h+=N,i+=N,j+=N,k+=N,l+=N;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//因为求的是面积所以需要减一</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> x=a;x&lt;c;x++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> y=b;y&lt;d;y++) z[x][y]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> x=e;x&lt;g;x++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> y=f;y&lt;h;y++) z[x][y]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> x=i;x&lt;k;x++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> y=j;y&lt;l;y++) z[x][y]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">0</span>;x&lt;N*<span class="number">2</span>;x++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> y=<span class="number">0</span>;y&lt;N*<span class="number">2</span>;y++) ans+=z[x][y];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tag link&quot;&gt;&lt;a class=&quot;link-card&quot; title=&quot;acwing 1761. 阻挡广告牌&quot; href=&quot;https://www.acwing.com/problem/content/1763/&quot;&gt;&lt;div class=&quot;left&quot;&gt;</summary>
      
    
    
    
    <category term="每日一题--未来可期小组" scheme="https://hdheid.github.io/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F%E5%B0%8F%E7%BB%84/"/>
    
    
    <category term="技巧题" scheme="https://hdheid.github.io/tags/%E6%8A%80%E5%B7%A7%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>2022-09-12队列队每日一题</title>
    <link href="https://hdheid.github.io/posts/e31d5516.html"/>
    <id>https://hdheid.github.io/posts/e31d5516.html</id>
    <published>2022-09-13T09:20:50.380Z</published>
    <updated>2022-09-13T10:57:19.688Z</updated>
    
    <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="力扣 1608. 特殊数组的特征值" href="https://leetcode.cn/problems/special-array-with-x-elements-greater-than-or-equal-x/"><div class="left"><img src="https://img.hipyt.cn/imgs/2022/09/e3f773cfe32f6f4f.jpg"/></div><div class="right"><p class="text">力扣 1608. 特殊数组的特征值</p><p class="url">https://leetcode.cn/problems/special-array-with-x-elements-greater-than-or-equal-x/</p></div></a></div><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>给出一个非负数数组，存在一个 x 使数组里面右 x 个数大于等于 x（<strong>x 不必为数组中的数</strong>），求出 x，如果没有则输出-1；</p><h2 id="题意解析"><a href="#题意解析" class="headerlink" title="题意解析"></a>题意解析</h2><p>这个题有个<strong>暴力</strong>做法，题目给的范围是数组的长度是 1 到 100，也就是说，x 的最大值也不肯超过一百，我们可以直接从一百到一遍历，碰到成立的直接输出就行。<br><br><br>其次，我们可以对数组进行降序处理，x 必然为 [1，n] 中的某一个数字，我们枚举 x，如果对于某一个 x，将其插入数组之后，左边有 x 个数大于等于它，右边的数全都小于它，那么 x 成立。否则输出-1；</p><h2 id="代码-暴力"><a href="#代码-暴力" class="headerlink" title="代码(暴力)"></a>代码(暴力)</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">specialArray</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; n)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">100</span>;i;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n.<span class="built_in">size</span>();j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(i&lt;=n[j]) cnt++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(cnt==i) <span class="keyword">return</span> cnt;</span><br><span class="line">            <span class="comment">//暴力yyds</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="代码-排序"><a href="#代码-排序" class="headerlink" title="代码(排序)"></a>代码(排序)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    int specialArray(vector&lt;int&gt;&amp; n) </span><br><span class="line">    &#123;</span><br><span class="line">        sort(n.begin(),n.end(),greater&lt;int&gt;());</span><br><span class="line">        for(int i=1;i&lt;=n.size();i++)</span><br><span class="line">        &#123; /*用代码实现。n[i-1]是第 i 个数，因为是降序，所以 i&lt;=n[i-1] 则有 i 个大于等于 i 的数，也即是 i 比左边的数都小或者相等，</span><br><span class="line">如果 i&gt;n[i] ,则 i 比右边的数都大*/</span><br><span class="line">            </span><br><span class="line">            if(i&lt;=n[i-1]&amp;&amp;(i==n.size()||i&gt;n[i])) return i;</span><br><span class="line">        &#125;</span><br><span class="line">        return -1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tag link&quot;&gt;&lt;a class=&quot;link-card&quot; title=&quot;力扣 1608. 特殊数组的特征值&quot; href=&quot;https://leetcode.cn/problems/special-array-with-x-elements-greate</summary>
      
    
    
    
    <category term="每日一题--队列队" scheme="https://hdheid.github.io/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-%E9%98%9F%E5%88%97%E9%98%9F/"/>
    
    
    <category term="暴力" scheme="https://hdheid.github.io/tags/%E6%9A%B4%E5%8A%9B/"/>
    
  </entry>
  
  <entry>
    <title>2022-09-11队列队每日一题</title>
    <link href="https://hdheid.github.io/posts/da65f856.html"/>
    <id>https://hdheid.github.io/posts/da65f856.html</id>
    <published>2022-09-13T09:20:30.493Z</published>
    <updated>2022-09-13T10:59:48.351Z</updated>
    
    <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="力扣 6172. 严格回文的数字" href="https://leetcode.cn/problems/strictly-palindromic-number/"><div class="left"><img src="https://img.hipyt.cn/imgs/2022/09/e3f773cfe32f6f4f.jpg"/></div><div class="right"><p class="text">力扣 6172. 严格回文的数字</p><p class="url">https://leetcode.cn/problems/strictly-palindromic-number/</p></div></a></div><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>将一个数 n 转化为 b 进制(b 为 2 到 n-2 的整数)，如果在 b 进制下 n 都是回文字符串，那么 n 是严格回文的。是返回 true；否则返回 false。</p><h2 id="题意解析"><a href="#题意解析" class="headerlink" title="题意解析"></a>题意解析</h2><p>直接将 n 的每一个 b 进制表示出来，在一个个判断是否回文，可以枚举。<br><div class="tip info"><p>知识点：进制转换</p></div></p><blockquote><p>这个题目涉及到的就是进制转换，如何将十进制的 n 转换为其他进制？<br>我们需要用除 b 取余法。简单来说，我们将 n%b，将余数保存在数组，再将 n/b。不断地从重复上述操作，最后保存的数组就是将十进制转化的 b 进制数。<br>需要注意的是：<strong>保存的进制数是从左到右看的，而正常的进制数都是从右到左</strong>。</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">zh</span><span class="params">(<span class="type">int</span> n,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">        <span class="keyword">while</span>(n)</span><br><span class="line">        &#123;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(n%b);</span><br><span class="line">            n/=b;</span><br><span class="line">        &#125;<span class="comment">//将 n 转换为 b 进制数，除 b 取余法</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>()/<span class="number">2</span>;i++)</span><br><span class="line">        &#123;<span class="comment">//因为判断回文，正反看都是一样的，所以这里进制数不需要处理</span></span><br><span class="line">            <span class="keyword">if</span>(ans[i]!=ans[ans.<span class="built_in">size</span>()-i<span class="number">-1</span>]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isStrictlyPalindromic</span><span class="params">(<span class="type">int</span> n)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n<span class="number">-2</span>;i++)</span><br><span class="line">        &#123;<span class="comment">//遍历判断回文即可</span></span><br><span class="line">            <span class="keyword">if</span>(!<span class="built_in">zh</span>(n,i)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tag link&quot;&gt;&lt;a class=&quot;link-card&quot; title=&quot;力扣 6172. 严格回文的数字&quot; href=&quot;https://leetcode.cn/problems/strictly-palindromic-number/&quot;&gt;&lt;div cl</summary>
      
    
    
    
    <category term="每日一题--队列队" scheme="https://hdheid.github.io/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-%E9%98%9F%E5%88%97%E9%98%9F/"/>
    
    
    <category term="进制转换" scheme="https://hdheid.github.io/tags/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>力扣第309场周赛---第三题</title>
    <link href="https://hdheid.github.io/posts/cdca7fb6.html"/>
    <id>https://hdheid.github.io/posts/cdca7fb6.html</id>
    <published>2022-09-11T06:10:17.486Z</published>
    <updated>2022-09-11T06:11:42.340Z</updated>
    
    <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="力扣 2401. 最长优雅子数组" href="https://leetcode.cn/problems/longest-nice-subarray/submissions/"><div class="left"><img src="https://img.hipyt.cn/imgs/2022/09/e3f773cfe32f6f4f.jpg"/></div><div class="right"><p class="text">力扣 2401. 最长优雅子数组</p><p class="url">https://leetcode.cn/problems/longest-nice-subarray/submissions/</p></div></a></div><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>给出一个数组，求出最长的优雅子数组数组。<br><em>优雅子数组</em>：对于这个数组中的每一个数，两两相与的结果为 0。</p><h2 id="题意解析"><a href="#题意解析" class="headerlink" title="题意解析"></a>题意解析</h2><p>很经典的双指针的题目。<br>我们定义 l，r 为子区间的左右端点，r 不断的遍历数组。对于每一次遍历，定义 x 指针，从 r 开始向左移动，<span class='p red'>如果存在与 r 点的数 & 不为零的，那么 l 就更新为 x++</span>。每一次都更新 ans 的值。</p><p><br><br><br></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">longestNiceSubarray</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;   </span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> l=<span class="number">0</span>,r=<span class="number">0</span>;r&lt;nums.<span class="built_in">size</span>();r++) <span class="comment">//遍历右端点</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> x=r;</span><br><span class="line">            <span class="keyword">while</span>(x!=l)</span><br><span class="line">            &#123;</span><br><span class="line">                x--;</span><br><span class="line">                <span class="keyword">if</span>(nums[x]&amp;nums[r]) <span class="comment">//找到以 r 为右端点的最长的字数组</span></span><br><span class="line">                &#123;</span><br><span class="line">                    l=++x;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            ans=<span class="built_in">max</span>(ans,r-l+<span class="number">1</span>);  <span class="comment">//更新答案</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tag link&quot;&gt;&lt;a class=&quot;link-card&quot; title=&quot;力扣 2401. 最长优雅子数组&quot; href=&quot;https://leetcode.cn/problems/longest-nice-subarray/submissions/&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="力扣周赛" scheme="https://hdheid.github.io/categories/%E5%8A%9B%E6%89%A3%E5%91%A8%E8%B5%9B/"/>
    
    
    <category term="双指针" scheme="https://hdheid.github.io/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>力扣第309场周赛---第二题</title>
    <link href="https://hdheid.github.io/posts/80d4dce4.html"/>
    <id>https://hdheid.github.io/posts/80d4dce4.html</id>
    <published>2022-09-11T06:10:08.526Z</published>
    <updated>2022-09-11T06:11:42.342Z</updated>
    
    <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="力扣 6168. 恰好移动 k 步到达某一位置的方法数目" href="https://leetcode.cn/problems/number-of-ways-to-reach-a-position-after-exactly-k-steps/"><div class="left"><img src="https://img.hipyt.cn/imgs/2022/09/e3f773cfe32f6f4f.jpg"/></div><div class="right"><p class="text">力扣 6168. 恰好移动 k 步到达某一位置的方法数目</p><p class="url">https://leetcode.cn/problems/number-of-ways-to-reach-a-position-after-exactly-k-steps/</p></div></a></div><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>给一个起点 s 和终点 e，要求你走 k 步正好从 s到达 e，每一次可以可以向左或者向右走(<strong>走过终点再往回走也行</strong>)，求方案数 MOD 1e9+7 的结果。<br><div class="tip warning faa-parent animated-hover"><p class="faa-horizontal">注意数轴可能有负数</p></div></p><h2 id="题意解析"><a href="#题意解析" class="headerlink" title="题意解析"></a>题意解析</h2><p>使用动态规划，</p><blockquote><ol><li><span class='p red'>dp[i][j]表示走了 i 步，当前位置在 j 的时候的方案数</span></li><li><span class='p red'>初始值 dp[0][s]=1</span></li><li><span class='p red'>状态转移方程：f[i][j] = f[i-1][j-1] + f[i-1][j+1]</span>，表示上一步从左到右和从右到左到达当前位置的方案数总和</li></ol></blockquote><div class="tip warning faa-parent animated-hover"><p class="faa-horizontal">考虑到负数，我们给起点和终点加一个偏移量</p></div><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">numberOfWays</span><span class="params">(<span class="type">int</span> s, <span class="type">int</span> e, <span class="type">int</span> k)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> dp[<span class="number">1010</span>][<span class="number">2010</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">        <span class="type">const</span> <span class="type">int</span> MOD=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line">        s+=<span class="number">500</span>; e+=<span class="number">500</span>; <span class="comment">//偏移量</span></span><br><span class="line">        dp[<span class="number">0</span>][s]=<span class="number">1</span>; <span class="comment">//初始化</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=k;i++) <span class="comment">//一共只能走 k 步</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;<span class="number">2005</span>;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                dp[i][j]+=dp[i<span class="number">-1</span>][j<span class="number">-1</span>]; <span class="comment">//从右走到达当前位置</span></span><br><span class="line">                dp[i][j]=(dp[i][j]+dp[i<span class="number">-1</span>][j+<span class="number">1</span>])%MOD; <span class="comment">//从左走到达当前位置</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[k][e];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tag link&quot;&gt;&lt;a class=&quot;link-card&quot; title=&quot;力扣 6168. 恰好移动 k 步到达某一位置的方法数目&quot; href=&quot;https://leetcode.cn/problems/number-of-ways-to-reach-a</summary>
      
    
    
    
    <category term="力扣周赛" scheme="https://hdheid.github.io/categories/%E5%8A%9B%E6%89%A3%E5%91%A8%E8%B5%9B/"/>
    
    
    <category term="动态规划" scheme="https://hdheid.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>力扣第309场周赛---第一题</title>
    <link href="https://hdheid.github.io/posts/b0c2303c.html"/>
    <id>https://hdheid.github.io/posts/b0c2303c.html</id>
    <published>2022-09-11T06:09:59.367Z</published>
    <updated>2022-09-11T06:11:42.337Z</updated>
    
    <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="6167. 检查相同字母间的距离" href="https://leetcode.cn/problems/check-distances-between-same-letters/"><div class="left"><img src="https://img.hipyt.cn/imgs/2022/09/e3f773cfe32f6f4f.jpg"/></div><div class="right"><p class="text">6167. 检查相同字母间的距离</p><p class="url">https://leetcode.cn/problems/check-distances-between-same-letters/</p></div></a></div><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>给你一个字符串和一个数组，(字母 a 对应数组的下标零等等)，判断每两个相同的字母之间的距离是否与给出的数组的相应字母的下标的数相同。</p><blockquote><p>例如：abba ，dis[2,3,4,0,……]，a 对应 0，则我们需要判断 dis[0]是否等于 2。</p></blockquote><h2 id="题意解析"><a href="#题意解析" class="headerlink" title="题意解析"></a>题意解析</h2><p>这道题可以使用双指针的方法。</p><blockquote><p>定义一个双指针 i，j，每当 i 指向某一个字符的时候，我们用 j <strong>找到它后面与它相同的字母</strong>。<br>然后计算两者之间的距离是否与 dis 给出的数字相同。</p></blockquote><p><br><br><br></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">checkDistances</span><span class="params">(string s, vector&lt;<span class="type">int</span>&gt;&amp; distance)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>()<span class="number">-1</span>;i++) <span class="comment">//遍历每一个单词</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> j=i+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(j&lt;s.<span class="built_in">size</span>()&amp;&amp;s[j]!=s[i]) j++; <span class="comment">//找到后面与它相同的字母</span></span><br><span class="line">            <span class="keyword">if</span>(s[i]==s[j]) <span class="keyword">if</span>(j-i<span class="number">-1</span>!=distance[s[i]-<span class="string">&#x27;a&#x27;</span>]) <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">//计算距离</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tag link&quot;&gt;&lt;a class=&quot;link-card&quot; title=&quot;6167. 检查相同字母间的距离&quot; href=&quot;https://leetcode.cn/problems/check-distances-between-same-letters/</summary>
      
    
    
    
    <category term="力扣周赛" scheme="https://hdheid.github.io/categories/%E5%8A%9B%E6%89%A3%E5%91%A8%E8%B5%9B/"/>
    
    
    <category term="双指针" scheme="https://hdheid.github.io/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>2022-09-10未来可期小组每日一题</title>
    <link href="https://hdheid.github.io/posts/7329ddad.html"/>
    <id>https://hdheid.github.io/posts/7329ddad.html</id>
    <published>2022-09-11T02:20:49.585Z</published>
    <updated>2022-09-11T02:23:56.619Z</updated>
    
    <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="acwing 1469. 围栏规划" href="https://www.acwing.com/problem/content/1471/"><div class="left"><img src="https://img.hipyt.cn/imgs/2022/09/e3f773cfe32f6f4f.jpg"/></div><div class="right"><p class="text">acwing 1469. 围栏规划</p><p class="url">https://www.acwing.com/problem/content/1471/</p></div></a></div><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>一共有 n 个点，每个点都会给出二维坐标，然后再给出 m 个关系，又关系的点属于同一个连通块，每一个连通块都有一个平行于坐标轴的矩形包围起来，求出<strong>最小的矩形的周长</strong>。<br><br><br><br></p><h2 id="题意解析"><a href="#题意解析" class="headerlink" title="题意解析"></a>题意解析</h2><p>这个题目信息是给出了若干个连通块，我们需要对每一个连通块进行处理。对此我们可以使用并查集对连通块进行处理。</p><blockquote><ol><li>我们用并查集维护连通块</li><li>对于每一个连通块，我们维护其最大和最小的 x 和 y</li><li>最后计算最小的矩形周长</li></ol></blockquote><p><br><br><br></p><h2 id="代码-c"><a href="#代码-c" class="headerlink" title="代码(c++)"></a>代码(c++)</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line">map&lt;<span class="type">int</span>,PII&gt; mp;</span><br><span class="line"><span class="type">int</span> p[N];</span><br><span class="line"><span class="type">int</span> ans1[N],ans2[N],ans3[N],ans4[N]; <span class="comment">//存放每一个连通块的最小 x，y 坐标和最大 x，y 坐标</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span> <span class="comment">//并查集</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x!=p[x]) p[x]=<span class="built_in">find</span>(p[x]);</span><br><span class="line">    <span class="keyword">return</span> p[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//找到题目所给的几个联通块，并求出围着这些联通块的最小周长</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m,l,r;</span><br><span class="line">    <span class="built_in">memset</span>(ans1,<span class="number">-0x3f</span>,<span class="keyword">sizeof</span> ans1); <span class="comment">//初始化</span></span><br><span class="line">    <span class="built_in">memset</span>(ans2,<span class="number">-0x3f</span>,<span class="keyword">sizeof</span> ans2);</span><br><span class="line">    <span class="built_in">memset</span>(ans3,<span class="number">0x3f</span>,<span class="keyword">sizeof</span> ans3);</span><br><span class="line">    <span class="built_in">memset</span>(ans4,<span class="number">0x3f</span>,<span class="keyword">sizeof</span> ans4);</span><br><span class="line">    </span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=n;i++) p[i]=i;  <span class="comment">//初始化</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123; <span class="comment">//记录每一个点的二维坐标</span></span><br><span class="line">        cin&gt;&gt;l&gt;&gt;r;</span><br><span class="line">        mp[i]=&#123;l,r&#125;; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123; </span><br><span class="line">        cin&gt;&gt;l&gt;&gt;r; <span class="comment">//维护连通块</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">find</span>(l)!=<span class="built_in">find</span>(r)) p[<span class="built_in">find</span>(r)]=<span class="built_in">find</span>(l); <span class="comment">//将有关系的弄到一起</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> pa=<span class="built_in">find</span>(i); <span class="comment">//对于每一个 i，如果其处于同一个连通块当中，那么 pa 值一定相同</span></span><br><span class="line">        ans1[pa]=<span class="built_in">max</span>(ans1[pa],mp[i].first); <span class="comment">//找每个连通块的最大坐标</span></span><br><span class="line">        ans2[pa]=<span class="built_in">max</span>(ans2[pa],mp[i].second);</span><br><span class="line">        </span><br><span class="line">        ans3[pa]=<span class="built_in">min</span>(ans3[pa],mp[i].first);  <span class="comment">//找最小坐标</span></span><br><span class="line">        ans4[pa]=<span class="built_in">min</span>(ans4[pa],mp[i].second);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> mx=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(ans1[i]==<span class="number">-0x3f3f3f3f</span>||ans1[i]==<span class="number">-0x3f3f3f3f</span>||ans3[i]==<span class="number">0x3f3f3f3f</span>||ans4[i]==<span class="number">0x3f3f3f3f</span>) <span class="keyword">continue</span>;</span><br><span class="line">        mx=<span class="built_in">min</span>(mx,<span class="number">2</span>*(ans1[i]-ans3[i]+ans2[i]-ans4[i])); <span class="comment">//对于每一个联通块求出最小周长，并求总的最小周长</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout&lt;&lt;mx;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tag link&quot;&gt;&lt;a class=&quot;link-card&quot; title=&quot;acwing 1469. 围栏规划&quot; href=&quot;https://www.acwing.com/problem/content/1471/&quot;&gt;&lt;div class=&quot;left&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="每日一题--未来可期小组" scheme="https://hdheid.github.io/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F%E5%B0%8F%E7%BB%84/"/>
    
    
    <category term="图" scheme="https://hdheid.github.io/tags/%E5%9B%BE/"/>
    
    <category term="并查集" scheme="https://hdheid.github.io/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>2022-09-10队列队每日一题</title>
    <link href="https://hdheid.github.io/posts/cd4d9c96.html"/>
    <id>https://hdheid.github.io/posts/cd4d9c96.html</id>
    <published>2022-09-10T06:33:55.262Z</published>
    <updated>2022-09-10T06:49:56.645Z</updated>
    
    <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="力扣 669. 修剪二叉搜索树" href="https://leetcode.cn/problems/trim-a-binary-search-tree/submissions/"><div class="left"><img src="https://img.hipyt.cn/imgs/2022/09/e3f773cfe32f6f4f.jpg"/></div><div class="right"><p class="text">力扣 669. 修剪二叉搜索树</p><p class="url">https://leetcode.cn/problems/trim-a-binary-search-tree/submissions/</p></div></a></div><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>题目给出的是一个搜索二叉树，并且给出了一个区间 [ low , high ] ，要求我们将树上不在区间范围内的叶子都剪掉，并且保证结构不被破坏，右子节点还是右子节点，同理左还是左。</p><h2 id="题意解析"><a href="#题意解析" class="headerlink" title="题意解析"></a>题意解析</h2><div class="tip info"><p>搜索二叉树的左子节点值小于根节点值，右子节点值大于根节点值</p></div><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1"><i>递归做法</i></button></li><li class="tab"><button type="button" data-href="#test1-2"><i>迭代做法</i></button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><blockquote><ol><li>我们将原函数当作递归函数，表示<strong>对子节点修剪后的结果</strong>。</li><li>如果当前节点为空，返回空。</li><li>如果<strong>当前节点的值小于 low</strong>，则当前节点的左节点及其所有子节点都小于 low，我们<strong>递归当前节点的右节点</strong>；</li><li>同理如果<strong>当前节点的值大于 high，我们递归左节点</strong>。</li><li>除此之外，符合要求的，我们将其左节点和右节点更新。</li></ol></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><blockquote><ol><li>我们首先找到符合标准也就是在范围之内的结点，将其作为根节点</li><li>对于某一个符合要求的节点 node，我们先对左子树 left 进行修剪<ol><li>如果 left 的值小于 low，则证明 left 和其左子树都不符合要求，故我们将 node 的左节点设置为 left 的右节点</li><li>如果 left 的值大于等于 low，那么我们继续对 left 的左节点进行处理</li></ol></li><li>右节点同理左节点</li></ol>    </blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test2-1"><i>递归做法</i></button></li><li class="tab"><button type="button" data-href="#test2-2"><i>迭代做法</i></button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test2-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">TreeNode* <span class="title">trimBST</span><span class="params">(TreeNode* root, <span class="type">int</span> low, <span class="type">int</span> high)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root==<span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">if</span>(root-&gt;val&lt;low) <span class="keyword">return</span> <span class="built_in">trimBST</span>(root-&gt;right,low,high); <span class="comment">//如果节点值小于low，我们找右节点</span></span><br><span class="line">        <span class="keyword">if</span>(root-&gt;val&gt;high) <span class="keyword">return</span> <span class="built_in">trimBST</span>(root-&gt;left,low,high); <span class="comment">//同理</span></span><br><span class="line"></span><br><span class="line">        root-&gt;right=<span class="built_in">trimBST</span>(root-&gt;right,low,high);  <span class="comment">//符合要求就正常更新</span></span><br><span class="line">        root-&gt;left=<span class="built_in">trimBST</span>(root-&gt;left,low,high);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">TreeNode* <span class="title">trimBST</span><span class="params">(TreeNode* root, <span class="type">int</span> low, <span class="type">int</span> high)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(root) <span class="comment">//首先找到符合要求的根节点</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(low&lt;=root-&gt;val&amp;&amp;root-&gt;val&lt;=high) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(root-&gt;val&lt;low) root=root-&gt;right;</span><br><span class="line">            <span class="keyword">if</span>(root-&gt;val&gt;high) root=root-&gt;left;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(root==<span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">auto</span> dian=root;</span><br><span class="line">        <span class="keyword">while</span>(dian-&gt;left) <span class="comment">//对左子树剪枝</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(dian-&gt;left-&gt;val&lt;low) dian-&gt;left=dian-&gt;left-&gt;right;</span><br><span class="line">            <span class="keyword">else</span> dian=dian-&gt;left;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        dian=root;</span><br><span class="line">        <span class="keyword">while</span>(dian-&gt;right) <span class="comment">//对右子树剪枝</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(dian-&gt;right-&gt;val&gt;high) dian-&gt;right=dian-&gt;right-&gt;left;</span><br><span class="line">            <span class="keyword">else</span> dian=dian-&gt;right;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tag link&quot;&gt;&lt;a class=&quot;link-card&quot; title=&quot;力扣 669. 修剪二叉搜索树&quot; href=&quot;https://leetcode.cn/problems/trim-a-binary-search-tree/submissions/</summary>
      
    
    
    
    <category term="每日一题--队列队" scheme="https://hdheid.github.io/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-%E9%98%9F%E5%88%97%E9%98%9F/"/>
    
    
    <category term="搜索二叉树" scheme="https://hdheid.github.io/tags/%E6%90%9C%E7%B4%A2%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    
  </entry>
  
</feed>
